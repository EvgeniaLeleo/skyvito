{
  "email": "user@example.com",
  "password": "string"
}

{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJyb2xlIjoic3RyaW5nIiwiZXhwIjoxNjcxODM2ODE1fQ.jqvXpw_14GgTWVDGRJk3GbjRG2232wHN0kf05bx8xXo",
    "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6InVzZXJAZXhhbXBsZS5jb20iLCJyb2xlIjoic3RyaW5nIiwiZXhwIjoxNjcxOTIxNDE1fQ.1qtaNs9oHLMTbpmCg8ReRpdXszTpZEfNUPkjfEvP4SQ",
    "token_type": "bearer"
}

{
  "title": "Первое",
  "description": "Текст описания",
  "price": 10
}
{
  "title": "Второе",
  "description": "Текст описания",
  "price": 11
}



У вас должен быть установлен docker и docker-compose
Скрипт можете положить в любую директорию.
Из этой директории его нужно будет запустить командой:
$ docker-compose up -d
бэкенд будет доступен по адресу:  http::confused:/localhost:8090/
остановить работу бэкенда можно командой:
$ docker-compose down


Удали у себя имидж v1.5

набери команду docker images

найди там нужный имидж

скопируй его айдишник
и набери команду docker rmi image_id

Если интересно, можете управлять мощностью бэкенда. Для этого нужно в присланном мной файле раскомментировать конец  13 стоки. Можно менять количество воркеров. Чем больше, тем производительнее backend, но при этом он будет потреблять больше мощности вашего процессора. 

Вся документация в Swagger GUI по указанному пути http::confused:/localhost:8090/

Обращаю внимание, что для создание объявления есть две ручки:
1) /ads - создание объявления с картинками, информация передается через query параметры и form-data
2) /adstext - создание объявления без картинок (их можно будет добавить позже по другой ручке), информация передается через json в body

Картинки в объявление можно добавлять/удалять через отдельные ручки: 
POST/DELETE  /ads/{pk}/image

Бэкенд работает на простенькой базе данные sqlite. Я сделал это в целях упростить проект и уменьшить его размер. Для учебного проекта такая архитектура более, чем достаточна

База данных пустая. Первое, что нужно сделать, завести пользователя по ручке 
/auth/register
Затем можно создавать объявления и комментарии. Все можно попробовать через Swagger GUI

А можно и сразу с фронта

Disclaimer: К сожалению в Swagger GUI есть баги (( Например, если вы будете через Swagger создавать объявление по ручке /ads и не вставите картинок, Swagger покажет ошибку. Но это ошибка чисто Swagger, через api всё работает (можете проверить, например, через postman)

На всякий случай, воспользоваться refresh токеном можно только один раз, при обновлении вы получите новую пару access и refresh токенов
access token валиден 30 минут, refresh - сутки

Всем привет! Я выкатил обновление.
1) Изменил контракт для ручки POST ads/{pk}/comments - теперь получает payload через body json, а не через query параметры
2) исправил опечатку в названии тома в docker-compose.yaml - теперь skyavito написано верно. Это ни на что не влияло, но так красивее
3) еще немного оптимизирован размер образа 





1. Тень под хедером при прокрутке
2. Тип onClick в ImageWrapper
3. Как реализовать приложение для мобильника? Там модалки заменяются на полноценные страницы
"build": "react-scripts build && echo '/* /index.html  200' | cat >build/_redirects ",


